{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prateekraj/Documents/work/smart-echoes/mughal-mahal-welfare/mmh-app/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { Asset } from \"expo-asset\";\nimport { Block, GalioProvider } from \"galio-framework\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\nimport Screens from \"./src/navigation/Screens\";\nimport { nowTheme } from \"./constants\";\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoadingComplete: false,\n      fontLoaded: false\n    };\n\n    _this._loadResourcesAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"montserrat-regular\": require(\"./assets/font/Montserrat-Regular.ttf\"),\n                \"montserrat-bold\": require(\"./assets/font/Montserrat-Bold.ttf\")\n              }));\n\n            case 2:\n              _this.setState({\n                fontLoaded: true\n              });\n\n              return _context.abrupt(\"return\", Promise.all(_toConsumableArray(cacheImages(assetImages))));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleLoadingError = function (error) {\n      console.warn(error);\n    };\n\n    _this._handleFinishLoading = function () {\n      if (_this.state.fontLoaded) {\n        _this.setState({\n          isLoadingComplete: true\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoadingComplete) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadResourcesAsync,\n          onError: this._handleLoadingError,\n          onFinish: this._handleFinishLoading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }\n        }, React.createElement(GalioProvider, {\n          theme: nowTheme,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, React.createElement(Block, {\n          flex: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        }, React.createElement(Screens, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"names":["React","AppLoading","Font","Asset","Block","GalioProvider","NavigationContainer","enableScreens","Screens","nowTheme","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","App","state","isLoadingComplete","fontLoaded","_loadResourcesAsync","loadAsync","require","setState","Promise","all","assetImages","_handleLoadingError","error","console","warn","_handleFinishLoading","Component"],"sources":["/Users/prateekraj/Documents/work/smart-echoes/mughal-mahal-welfare/mmh-app/App.js"],"sourcesContent":["import React from \"react\";\nimport { Image } from \"react-native\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { Asset } from \"expo-asset\";\nimport { Block, GalioProvider } from \"galio-framework\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\n// Before rendering any navigation stack\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\n\nimport Screens from \"./src/navigation/Screens\";\nimport { /* Images, articles, */ nowTheme } from \"./constants\";\n\n// cache app images\n// const assetImages = [\n//   Images.Onboarding,\n//   Images.Logo,\n//   Images.Pro,\n//   Images.NowLogo,\n//   Images.iOSLogo,\n//   Images.androidLogo,\n//   Images.ProfilePicture,\n//   Images.CreativeTimLogo,\n//   Images.InvisionLogo,\n//   Images.RegisterBackground,\n//   Images.ProfileBackground,\n// ];\n\n// cache product images\n// articles.map((article) => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map((image) => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nexport default class App extends React.Component {\n  state = {\n    isLoadingComplete: false,\n    fontLoaded: false,\n  };\n\n  // async componentDidMount() {\n  //   Font.loadAsync({\n  //     \"montserrat-regular\": require(\"./assets/font/Montserrat-Regular.ttf\"),\n  //     \"montserrat-bold\": require(\"./assets/font/Montserrat-Bold.ttf\")\n  //   });\n\n  //   this.setState({ fontLoaded: true });\n  // }\n\n  render() {\n    if (!this.state.isLoadingComplete) {\n      return (\n        <AppLoading\n          startAsync={this._loadResourcesAsync}\n          onError={this._handleLoadingError}\n          onFinish={this._handleFinishLoading}\n        />\n      );\n    } else {\n      return (\n        <NavigationContainer>\n          <GalioProvider theme={nowTheme}>\n            <Block flex>\n              <Screens />\n            </Block>\n          </GalioProvider>\n        </NavigationContainer>\n      );\n    }\n  }\n\n  _loadResourcesAsync = async () => {\n    await Font.loadAsync({\n      \"montserrat-regular\": require(\"./assets/font/Montserrat-Regular.ttf\"),\n      \"montserrat-bold\": require(\"./assets/font/Montserrat-Bold.ttf\"),\n    });\n\n    this.setState({ fontLoaded: true });\n\n    return Promise.all([...cacheImages(assetImages)]);\n  };\n\n  _handleLoadingError = (error) => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    if (this.state.fontLoaded) {\n      this.setState({ isLoadingComplete: true });\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,iBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAGA,SAASC,aAAT,QAA8B,sBAA9B;AACAA,aAAa;AAEb,OAAOC,OAAP;AACA,SAAiCC,QAAjC;;AAoBA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EAC3B,OAAOA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAW;IAC3B,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAOC,KAAK,CAACC,QAAN,CAAeF,KAAf,CAAP;IACD,CAFD,MAEO;MACL,OAAOV,KAAK,CAACa,UAAN,CAAiBH,KAAjB,EAAwBI,aAAxB,EAAP;IACD;EACF,CANM,CAAP;AAOD;;IAEoBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;MACNC,iBAAiB,EAAE,KADb;MAENC,UAAU,EAAE;IAFN,C;;UAoCRC,mB,GAAsB;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACdpB,IAAI,CAACqB,SAAL,CAAe;gBACnB,sBAAsBC,OAAO,wCADV;gBAEnB,mBAAmBA,OAAO;cAFP,CAAf,CADc;;YAAA;cAMpB,MAAKC,QAAL,CAAc;gBAAEJ,UAAU,EAAE;cAAd,CAAd;;cANoB,iCAQbK,OAAO,CAACC,GAAR,oBAAgBjB,WAAW,CAACkB,WAAD,CAA3B,EARa;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,C;;UAWtBC,mB,GAAsB,UAACC,KAAD,EAAW;MAG/BC,OAAO,CAACC,IAAR,CAAaF,KAAb;IACD,C;;UAEDG,oB,GAAuB,YAAM;MAC3B,IAAI,MAAKd,KAAL,CAAWE,UAAf,EAA2B;QACzB,MAAKI,QAAL,CAAc;UAAEL,iBAAiB,EAAE;QAArB,CAAd;MACD;IACF,C;;;;;;;WA3CD,kBAAS;MACP,IAAI,CAAC,KAAKD,KAAL,CAAWC,iBAAhB,EAAmC;QACjC,OACE,oBAAC,UAAD;UACE,UAAU,EAAE,KAAKE,mBADnB;UAEE,OAAO,EAAE,KAAKO,mBAFhB;UAGE,QAAQ,EAAE,KAAKI,oBAHjB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF;MAOD,CARD,MAQO;QACL,OACE,oBAAC,mBAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACE,oBAAC,aAAD;UAAe,KAAK,EAAExB,QAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACE,oBAAC,KAAD;UAAO,IAAI,MAAX;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACE,oBAAC,OAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CADF,CADF,CADF;MASD;IACF;;;;EAnC8BT,KAAK,CAACkC,S;;SAAlBhB,G"},"metadata":{},"sourceType":"module"}